GroupedListView<dynamic, String>(
    elements: getTodoListForEachTab(
        _todoList, _currentTabIndex, _searchTodoData),
    itemBuilder: (c, element) {
      return TodoView(
        todoData: element,
        handleRemoveTodo: handleRemoveTodo,
      );
    },

    groupComparator: (value1, value2) =>
        groupComparator(value1, value2, _currentTabIndex),
// value1 == "Overdue" ? 1 : value2.compareTo(value1),
    order: GroupedListOrder.DESC,
    itemComparator: (value1, value2) =>
        itemComparator(value1, value2, _currentTabIndex),
// value2.dateTime.difference(value1.dateTime).inSeconds,

    groupBy: (element) =>
        groupBy(element, formatter, _currentTabIndex),
// groupBy: (element) => "",
    groupSeparatorBuilder: (String value) => Padding(
        padding: const EdgeInsets.all(10.0),
        child: Container(
          padding: const EdgeInsets.only(bottom: 10.0),
          decoration: const BoxDecoration(
              border: Border(
                  bottom: BorderSide(
                      color: Color.fromRGBO(0, 0, 0, 0.2)))),
          child: Text(
            value,
            textAlign: TextAlign.left,
            style: const TextStyle(
                fontSize: 20, fontWeight: FontWeight.bold),
          ),
        )),
  )